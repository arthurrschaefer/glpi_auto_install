#!/bin/bash
#Autor: Flávio Silva | OPROFESSOR
#DATA CRIAÇÃO: 29/07/2024

# Função para buscar a última versão do GLPI do GitHub
get_latest_glpi_version() {
  curl --silent "https://api.github.com/repos/glpi-project/glpi/releases/latest" | grep -Po '"tag_name": "\K.*?(?=")'
}

# Prompt inicial
read -p "Você gostaria de seguir a instalação nos moldes recomendados pela Teclib'? (s/n) " use_teclib

# Pergunta a URL desejada para o GLPI
read -p "Digite a URL desejada para acessar o GLPI (ex: glpi.seudominio.com): " glpi_url

# Armazena a última versão do GLPI
GLPI_VERSION=$(get_latest_glpi_version)

# Adiciona repositórios necessários
add-apt-repository ppa:ondrej/php -y
add-apt-repository ppa:ondrej/apache2 -y

# Atualiza a lista de pacotes e atualiza pacotes existentes
apt update -y
apt upgrade -y

# Instala o Apache2, PHP e as extensões necessárias
apt install -y apache2 libapache2-mod-php php-soap php-cas php php-{apcu,cli,common,curl,gd,imap,ldap,mysql,xmlrpc,xml,mbstring,bcmath,intl,zip,bz2}

# Baixa e descompacta a última versão do GLPI na pasta /var/www/html/
wget -O- https://github.com/glpi-project/glpi/releases/download/$GLPI_VERSION/glpi-$GLPI_VERSION.tgz | tar -xzv -C /var/www/html/

# Ajusta permissões
chown www-data:www-data /var/www/html/glpi -Rf
find /var/www/html/glpi -type d -exec chmod 775 {} \;
find /var/www/html/glpi -type f -exec chmod 644 {} \;

# Instala o MariaDB
apt install -y mariadb-server

# Pergunta ao usuário sobre as configurações do banco de dados
read -p "Deseja usar as configurações padrão do banco de dados? (s/n) " use_default

if [ "$use_default" == "s" ]; then
  DB_NAME="glpidb"
  DB_USER="glpi"
  DB_PASSWORD="glpi123"
else
  read -p "Digite o nome do banco de dados: " DB_NAME
  read -p "Digite o nome do usuário do banco de dados: " DB_USER
  read -sp "Digite a senha do usuário do banco de dados: " DB_PASSWORD
  echo
fi

# Cria banco de dados e usuário para o GLPI
mysql -e "create database ${DB_NAME} character set utf8"
mysql -e "create user '${DB_USER}'@'localhost' identified by '${DB_PASSWORD}'"
mysql -e "grant all privileges on ${DB_NAME}.* to '${DB_USER}'@'localhost' with grant option"
mysql_tzinfo_to_sql /usr/share/zoneinfo | mysql -p -u root mysql
mysql -e "GRANT SELECT ON mysql.time_zone_name TO '${DB_USER}'@'localhost'"
mysql -e "FLUSH PRIVILEGES"

if [ "$use_teclib" == "s" ]; then
  # Configurações recomendadas pela Teclib'
  mysql_tzinfo_to_sql /usr/share/zoneinfo | mysql mysql

  # Cria e configura o arquivo downstream.php
  cat <<EOF > /var/www/html/glpi/inc/downstream.php
<?php
define('GLPI_CONFIG_DIR', '/etc/glpi/');
if (file_exists(GLPI_CONFIG_DIR . '/local_define.php')) {
    require_once GLPI_CONFIG_DIR . '/local_define.php';
}
EOF

  # Move pastas para locais mais seguros
  mv /var/www/html/glpi/config /etc/glpi
  mv /var/www/html/glpi/files /var/lib/glpi
  mv /var/lib/glpi/_log /var/log/glpi

  # Cria e configura o arquivo local_define.php
  cat <<EOF > /etc/glpi/local_define.php
<?php
define('GLPI_VAR_DIR', '/var/lib/glpi');
define('GLPI_DOC_DIR', GLPI_VAR_DIR);
define('GLPI_CRON_DIR', GLPI_VAR_DIR . '/_cron');
define('GLPI_DUMP_DIR', GLPI_VAR_DIR . '/_dumps');
define('GLPI_GRAPH_DIR', GLPI_VAR_DIR . '/_graphs');
define('GLPI_LOCK_DIR', GLPI_VAR_DIR . '/_lock');
define('GLPI_PICTURE_DIR', GLPI_VAR_DIR . '/_pictures');
define('GLPI_PLUGIN_DOC_DIR', GLPI_VAR_DIR . '/_plugins');
define('GLPI_RSS_DIR', GLPI_VAR_DIR . '/_rss');
define('GLPI_SESSION_DIR', GLPI_VAR_DIR . '/_sessions');
define('GLPI_TMP_DIR', GLPI_VAR_DIR . '/_tmp');
define('GLPI_UPLOAD_DIR', GLPI_VAR_DIR . '/_uploads');
define('GLPI_CACHE_DIR', GLPI_VAR_DIR . '/_cache');
define('GLPI_LOG_DIR', '/var/log/glpi');
EOF

  # Ajusta permissões
  chown root:root /var/www/html/glpi/ -R
  chown www-data:www-data /etc/glpi -R
  chown www-data:www-data /var/lib/glpi -R
  chown www-data:www-data /var/log/glpi -R
  chown www-data:www-data /var/www/html/glpi/marketplace -Rf
  find /var/www/html/glpi/ -type f -exec chmod 0644 {} \;
  find /var/www/html/glpi/ -type d -exec chmod 0755 {} \;
  find /etc/glpi -type f -exec chmod 0644 {} \;
  find /etc/glpi -type d -exec chmod 0755 {} \;
  find /var/lib/glpi -type f -exec chmod 0644 {} \;
  find /var/lib/glpi -type d -exec chmod 0755 {} \;
  find /var/log/glpi -type f -exec chmod 0644 {} \;
  find /var/log/glpi -type d -exec chmod 0755 {} \;

  # Configura o Apache
  cat <<EOF > /etc/apache2/sites-available/glpi.conf
<VirtualHost *:80>
    ServerName $glpi_url
    DocumentRoot /var/www/html/glpi/public
    <Directory /var/www/html/glpi/public>
        Require all granted
        RewriteEngine On
        RewriteCond %{HTTP:Authorization} ^(.+)$
        RewriteRule .* - [E=HTTP_AUTHORIZATION:%{HTTP:Authorization}]
        RewriteCond %{REQUEST_FILENAME} !-f
        RewriteRule ^(.*)$ index.php [QSA,L]
    </Directory>
</VirtualHost>
EOF

  a2ensite glpi
  systemctl reload apache2
fi

# Instala o GLPI via CLI
php /var/www/html/glpi/bin/console glpi:database:install --db-host=localhost --db-name=${DB_NAME} --db-user=${DB_USER} --db-password=${DB_PASSWORD}

# Ajusta permissões novamente
chown www-data:www-data /var/www/html/glpi/files -Rf

# Habilita e reinicia o Apache2
systemctl enable apache2
systemctl restart apache2

echo "Instalação do GLPI versão $GLPI_VERSION concluída!"
echo "Primeiro Acesso: Usuário: glpi | Senha: glpi"
echo "BY: OPROFESSOR AND CHATGPT"
